#pragma once
#include <cstdint>

#include "traccc/definitions/qualifiers.hpp"

// ------------------------------------------------------------
// ①  Weights stored in global memory for GPU execution;
//    on the host they act as regular constant arrays
// ------------------------------------------------------------

namespace traccc::fitting::detail {

// ------------------------------------------------------------
// ①  Weights stored in global memory for GPU execution;
//    on the host they act as regular constant arrays
// ------------------------------------------------------------
TRACCC_DEVICE_CONSTANT TRACCC_ALIGN(4) inline const std::int8_t W0[768] = {
    -3, 0, -1, 5, 0, 26, -87, 127, 6, 96, 44, -15, 55, -9, -3, -4, 20, -28, 15, -12, -5, 13, 37, 0, -4, -2, 1, -74, -1, 4, 4, -36, -24, -39, -62, -7, 127, 7, 41, 2, 66, -66, 3, 15, 4, -39, -2, 0, 1, 0, 0, 9, -1, -127, -82, 44, 0, -17, -3, 11, 1, 2, -2, -4, 8, 4, 24, 12, -1, 22, 35, 0, 3, -1, 0, -21, 1, 120, -127, -82, -4, 64, -12, 20, -1, -4, 17, 2, -21, 28, -8, 8, 1, -13, 112, 0, -1, 0, 0, -1, 0, -127, 25, 37, 0, -5, 0, -1, -2, 9, 12, 3, -7, 20, 2, 3, 0, -10, 4, 0, 0, 0, 0, 2, 0, 77, 71, -127, 9, -81, 19, -23, 43, 23, -35, -1, -9, -16, -8, 53, -1, -15, 65, 0, -1, -1, 0, -106, -3, 5, 24, 3, -3, -43, -4, -102, -85, -23, -104, 11, -127, 44, -2, -59, 13, -21, -67, 0, 0, 0, 1, 4, 2, -16, 14, 3, 0, 14, -9, -1, 10, -23, 26, -1, 23, 0, 2, -127, 2, -25, -15, 0, -1, 0, 0, 2, 1, 12, 20, -8, -1, 1, 127, -3, -19, -4, 11, -1, -9, 2, -2, -14, 0, -6, 32, 0, 0, 0, 0, 0, 0, 21, -5, -42, 2, 23, 17, 9, 0, 7, -14, 1, -100, -21, 2, -127, 0, -1, -28, 0, 1, -1, 0, -63, -1, 4, -2, 21, -4, -36, 3, 0, 14, -32, -36, 2, 127, 49, -3, 48, 3, 46, -32, 0, -3, 0, -1, -85, -1, 4, -34, -43, 4, -127, 9, 27, 15, -37, 50, 1, -10, 114, -16, 118, -1, 95, 7, 0, 0, 0, 0, -1, 0, -108, 32, 3, -3, -74, -9, 6, -3, -8, -127, 3, -64, 47, -6, -34, 2, 32, -8, 0, 5, 1, 0, 57, -2, -72, 127, 32, -19, -20, -26, -16, -5, -12, -1, 2, 20, -8, -18, -25, -2, 90, -2, 0, 0, 0, 0, 7, 0, 6, 4, -6, -1, 14, -127, -2, 3, -4, 12, 1, -5, 18, -5, -14, 0, 18, 12, 0, 11, -2, 1, 127, -4, -10, -13, 40, -4, -7, 25, 13, -10, 33, 29, 0, 81, 8, 1, 24, 2, -22, -42, 0, 0, 0, 0, 0, 0, -56, 0, 81, 1, -21, -1, -2, 0, 1, -11, 4, -16, 14, -1, -11, 0, -127, 8, 0, 3, 0, 1, -23, 0, 14, -29, -26, 1, -5, 1, 7, -15, 6, 9, -2, -4, 14, 2, -9, 1, 127, -21, 0, 7, -1, 0, -127, -3, -26, 25, -20, -7, -8, -78, 4, -16, -18, -12, 2, -62, -84, -4, -44, -6, -6, 13, 0, 0, 0, 0, -1, -1, 29, 28, -8, -3, -13, -9, 1, -1, 1, 16, 0, 14, 37, -5, -11, -2, -127, 10, 0, 1, -1, 0, -12, -3, 117, 127, 8, 14, -84, 53, 14, 10, 25, 101, 6, -8, -59, 5, 18, -5, -21, -55, 0, 0, 0, -1, 6, -1, -127, 47, -76, -7, 84, -8, -13, -8, 9, -22, 0, -61, 56, -2, -48, -3, 7, 8, 0, 2, -1, -1, 56, -4, 32, 1, -41, -4, 52, 10, 6, 0, -34, 24, -1, 127, 17, -1, 123, -4, 69, -4, 0, 6, -1, 0, 15, 0, -127, 121, -1, -8, 43, 9, 12, 29, -38, 21, -5, -5, -70, -11, 3, 1, -6, 9, 0, 1, 0, 0, 34, -2, 3, -2, -54, 9, -78, 27, 15, -7, 6, -117, 3, -127, -17, 0, -109, 4, 42, -45, 0, 1, -2, 0, -5, 2, 58, -118, 62, 5, 50, 92, 4, 16, -9, 86, 0, -9, -18, 3, 24, 4, 127, 65, 0, 2, 0, 1, 1, -1, -66, -127, -97, 9, 17, -29, -26, 7, 31, -30, -3, 18, 7, 21, -30, 4, 86, -5, 0, 3, 0, 0, -10, 0, 19, 127, 57, 16, 70, 1, 1, 15, 20, 20, 2, 35, 26, -16, 14, 1, 32, 12, 0, -1, 2, -1, -13, -1, 10, -1, 127, 11, -42, -57, -67, -63, 122, 27, 0, 13, 30, 9, -12, -7, 2, -3, 0, 0, 1, 0, -27, 1, -127, 13, 31, -9, 45, -5, 12, -1, 10, -68, -1, 70, 28, -6, 29, -1, 40, 13, 0, 1, 0, 0, -4, 0, -127, -36, -31, 5, -2, 5, -2, 9, -1, 17, -1, 7, -18, 10, 17, -1, 16, 9, 0, 2, 1, 1, -127, -1, -14, -20, 1, -4, -20, 25, 4, 4, 8, 10, -2, 13, -14, 1, -3, 2, 23, -15, 0 };

TRACCC_DEVICE_CONSTANT TRACCC_ALIGN(4) inline const std::int8_t W1[2048] = {
    -17, 25, 63, -37, 61, 127, -19, 31, -127, -58, -14, 18, -3, 64, 45, -28, -5, 21, -70, -21, -30, -46, -89, -45, 22, -62, 5, -5, 96, -60, 26, 2, -55, -43, -105, -93, -9, -4, -71, 20, 25, -88, 61, -47, -23, -3, -33, -40, 120, -127, 31, -54, -26, 16, -18, 81, 47, -28, -46, 86, -59, 49, 1, 30, -33, -9, 1, -112, 57, -35, -17, 63, -48, 75, -45, -36, -48, -4, 27, -62, -112, -4, 26, -81, -7, 127, -63, 53, 21, -6, -3, 33, 9, -62, 26, 18, -51, 11, 127, -3, 66, 22, 5, -37, -26, 12, -12, -23, 14, -9, -21, 7, -17, -15, 16, -35, 8, -26, -4, -14, 0, -20, 42, -38, -9, 0, 11, -6, 127, 34, 29, -78, -5, -43, -117, 53, -7, 40, 35, -18, 36, 13, -19, 50, 2, -1, -11, 29, 13, -13, 46, 25, -8, -48, -27, 52, -3, 19, 12, -9, -57, 2, -13, -52, 44, -17, -2, 17, -14, -33, 29, 60, 21, 83, 23, -77, -51, 3, 25, -127, 6, 51, 41, 33, -16, -11, -24, 80, 16, 41, 4, -16, 31, 16, 39, 21, 11, -25, -22, -7, -78, -126, 12, 79, -7, 2, 78, -39, -2, 8, -47, 25, 1, -53, 57, -13, -102, -67, -25, -25, 12, 5, 23, 7, -20, -16, 19, -58, 67, -48, -28, 5, 8, 4, -14, 30, 37, -19, 18, 18, 44, -111, 14, 127, -36, -58, -24, 78, -86, -20, -29, 12, -51, 3, -26, -4, 23, -10, 47, -31, -5, -13, 48, -37, -39, -15, 41, -30, -36, -44, 4, -22, -118, 53, 3, -127, -3, 1, 18, -4, 19, 30, 29, -47, 8, -20, 31, 10, 11, 40, 4, 22, 30, -4, -127, 2, -28, -33, 53, -11, -100, 51, -24, 27, 7, -19, 22, 46, 24, 28, 36, 5, -48, 74, -15, 59, -48, 11, 15, -56, 8, 5, -30, -41, 14, 6, 43, -59, 2, -75, 99, -84, -13, 112, 19, 37, 25, -45, -10, 20, -44, 13, -27, 22, -127, 34, 4, 0, -52, 47, -36, 11, -5, 37, 2, -5, 15, -10, 32, -16, -8, 22, 22, -19, -83, 29, -1, 30, 23, -49, 7, 1, -5, -9, 11, 0, -127, -7, 7, -10, -10, -5, 13, 1, 61, -34, 71, -107, -7, -84, 6, 21, 35, -72, 60, -52, -8, 10, 58, -5, -24, -78, 40, -46, -40, 11, -127, 19, 88, -53, 73, 3, -25, -42, 19, -17, -22, 21, -56, -39, 83, -84, 2, 9, -29, 33, -11, 12, 25, -37, -6, 1, -74, -30, -11, -100, -127, 41, 17, 18, 33, 30, -2, -18, 17, 35, 105, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -22, 29, 0, 10, -5, 28, -1, -31, -15, -22, 23, -30, -35, -17, -4, 8, -79, 6, -16, -37, 14, 16, 24, -126, -21, 36, -84, -15, -5, 53, 19, -63, -13, 11, -38, 37, -26, -87, 22, -6, -19, 27, -5, 35, -19, 40, 51, -33, -16, 48, -16, -18, 21, -6, 85, -127, -30, -24, 45, -28, 26, 12, -1, -10, 12, 43, 6, 11, -86, -12, 5, -62, 6, 1, 19, -33, -47, 24, 16, -83, -64, 19, -124, -16, 78, -54, -2, 33, -35, 27, -85, -1, -23, 127, -14, -37, 16, 43, -95, 24, -84, 52, -14, -36, -48, 69, -4, -27, -20, 6, 18, -25, -62, -21, -45, -7, 1, 20, -15, -20, 22, 47, -91, -19, 53, 127, 11, 36, 0, 18, -25, 0, -4, 65, 1, 127, 75, -24, 7, -26, -8, -56, -2, -6, -1, -13, -2, -13, 6, 5, 5, 17, -2, 0, 14, -1, 26, 13, 35, -16, 12, 8, -10, 10, 18, 15, 11, 8, -11, -12, -27, 94, 13, 2, -10, 76, -127, 10, -55, -14, -61, -87, -7, 57, -26, -2, 5, -21, -9, 38, -17, -38, -29, 121, -23, 127, -74, 105, -48, 111, -115, -79, 100, 63, -13, -15, 21, 125, -33, -21, -8, -35, -37, -40, 7, 98, 60, 1, -16, 57, -94, -53, 24, 63, -10, 65, -73, 127, -72, 68, 31, -28, -70, 15, -30, -94, 16, 4, 48, 28, 7, 0, -20, -25, -30, 53, 19, -117, 5, -38, -12, -41, -12, 7, 43, 37, 5, 127, -10, -45, -58, -22, -21, -28, 7, 15, 13, -64, -33, 25, -1, -34, 39, 22, -51, -38, -14, 49, -48, -7, 1, 85, -66, 54, 14, 115, 3, 30, -4, 24, 9, -45, -16, 126, -39, -41, -48, -26, 18, 18, -21, -6, -2, 64, 8, -12, -6, 3, -1, -3, -38, -1, 24, -30, 19, 0, -1, -70, -41, 20, -10, 47, -51, 53, -4, -4, 11, 16, -28, 32, -8, -127, -9, 3, 9, 41, 1, 31, -26, -8, -28, -7, -13, -103, -46, -23, -28, -11, -30, 37, 14, 17, -77, -28, -24, 5, 15, -20, -16, 20, 38, -127, 3, -19, -12, -16, 112, -28, -11, 6, -5, -6, -2, -27, 14, -27, -21, 34, -24, -14, -16, 6, -35, -59, -33, -10, -127, -33, 90, -42, 53, -12, 12, 9, 14, -46, 7, 18, 17, -70, -47, 24, 102, -29, 83, 10, 66, -37, 19, -21, -9, -47, -26, -63, 32, -21, 11, 86, -69, 52, -11, -31, -45, -26, 3, -45, -35, 41, -23, 34, 27, -60, -89, 28, -127, 5, 23, -30, -5, 14, -24, 1, -59, -21, 1, 101, 3, 39, -46, -19, -27, -113, 3, -46, -21, -25, 64, -123, -23, 33, -47, -34, 46, 8, 6, -3, 21, 0, 35, -34, 68, -51, 59, 47, 127, 7, 28, -73, -5, -9, 17, -35, 2, 4, -127, -103, 71, -66, -89, 94, 3, -43, -8, 23, 38, -44, 15, -4, 24, -12, 39, -20, -84, -47, -64, 46, 63, 66, 49, -1, -3, -23, -22, 94, -16, -61, -30, 0, -3, -127, -16, -10, -71, -56, -3, -4, 19, -38, 43, 8, -4, 39, 27, -19, -60, 5, 66, 50, -76, -22, 24, 54, 15, -23, 13, 82, -39, 71, 23, -5, -2, 30, -50, 3, -23, 69, 22, -3, -4, -27, 23, -17, -11, 32, 6, 45, -19, 6, -53, -8, -17, -14, 85, 127, 10, 10, -58, -11, -37, 47, -20, 18, 6, -5, 15, 52, -19, 46, -14, 7, -12, -127, 30, -5, -123, -23, 68, 17, 34, 26, 1, 24, 20, -15, 39, 4, -11, 0, 41, -17, -1, -4, -35, 37, 13, -8, 42, 1, -11, 126, -14, -13, 2, 11, -34, -26, 16, -9, -11, -25, -28, 84, 8, 35, -24, 1, -18, -16, -127, 39, 63, 2, -54, -24, 26, 66, 3, -49, 98, 11, -19, -34, 16, -127, -82, -12, 6, -55, -2, 38, -10, -88, 41, 10, -25, 15, -10, -47, -8, -2, 56, -5, 2, -20, 4, 29, -43, -127, 2, -55, -98, 29, -66, 12, -46, -17, 50, -26, -7, 1, -29, -80, 32, 34, -7, -99, 34, 10, -60, 19, 66, 38, -2, -79, 6, 11, -42, 127, 17, -38, -18, -10, -45, -3, -17, -22, -14, -1, 18, 11, -50, 9, -55, -33, -33, -3, 62, -33, -23, -31, -21, -44, -22, 78, 7, -33, 37, -52, 42, 24, -58, -72, 2, 95, -127, 6, -24, 33, 15, 16, -80, -60, 17, -14, 16, -3, 9, 73, -35, -41, -1, 24, 16, 40, 7, 6, -23, 66, -101, 0, 17, 20, 90, -15, -9, -20, 57, -55, 108, 92, -44, -46, 13, 7, -30, -2, -51, -73, -81, 76, 20, 22, 25, -16, -61, -30, -42, 127, 12, -37, 8, -32, -69, 83, -45, -63, -14, -67, -48, -51, -56, 22, 4, -11, 22, 0, 7, 1, -10, -52, 127, 6, 98, -16, -9, -90, -35, 2, 16, 66, 24, -8, -34, -4, -5, -12, 0, -42, -84, -17, 41, -127, -15, 38, 7, -37, 48, 17, -35, 0, -29, 10, 4, -6, 14, 93, -8, -32, 0, -8, -59, -27, -47, 7, -5, 6, -3, -12, 10, 33, -8, 31, -1, -33, 4, 4, 1, 127, 1, 8, -4, 3, -10, -3, 6, -8, 6, 30, 9, -10, 0, 2, 3, -4, 10, -1, -5, -26, -5, 32, -18, 47, -72, -43, 57, -11, -41, 45, 0, -19, -19, 56, -37, -3, 6, -21, -7, -127, -13, 52, 0, 6, -6, -22, -19, -4, -18, -121, 19, -94, 0, 61, 45, -38, 5, -13, 16, 35, -13, 36, 17, 2, -43, -65, -82, -1, 3, -77, 127, -5, 54, 28, -53, -7, 10, -14, 20, 50, 0, -23, -32, -7, 31, 12, -25, -111, 60, -7, 37, -102, 4, -26, -21, 18, 14, -71, 3, 7, -19, -113, -8, -68, -3, 127, -30, 24, 16, -10, -21, 7, -70, -26, 59, -6, -11, 5, -6, -127, -24, -27, -26, 9, -22, -50, -3, -26, 85, 8, -5, 0, 7, 18, -50, 27, 5, -42, -14, -11, -31, -22, -3, -22, -62, 21, 20, 14, -120, -91, -79, -64, 94, -83, 106, -70, -26, -115, 5, -4, -53, -127, 70, 18, 27, 26, 1, -28, -18, 35, -24, -19, -34, -9, -6, 36, 55, 0, -121, 0, -1, -46, 0, 127, -81, -34, -8, -22, -25, 1, 0, -18, 53, -1, 3, -32, -8, -3, 27, -17, 20, 55, 0, -39, -5, -51, -16, -28, 36, -6, -12, 9, -127, 103, -79, -2, -17, -18, -60, 36, 17, 22, 17, -4, 25, -86, 18, 5, -117, -24, -34, -22, 44, 31, 24, 12, 2, -8, 19, 67, 15, -8, -42, -9, -1, -8, -1, 108, -6, -19, 48, -127, 9, -19, -35, 21, -81, 0, -23, 4, -24, -9, 29, 2, 22, 7, 35, 19, 48, 13, -27, -3, 52, -15, 5, 5, -30, 15, -25, 77, -80, -17, 43, 40, -24, 14, -10, -32, 67, 15, -13, -127, 22, 36, -7, 9, -39, 39, -13, -8, -30, -84, -20, -56, -11, -8, 29, 2, -11, -22, -3, 9, -39, -19, 15, 34, -31, -24, -9, -9, 49, -69, -44, 0, -36, 41, -14, 20, -2, 20, -6, 4, -12, -3, -8, 0, -127, -12, 13, -2, 0, 11, 7, -59, -5, -48, 0, 48, -1, -25, -7, 5, 11, 6, -22, 10, 29, -9, 7, 9, -1, -128, 8, 10, -2, -6, 4, -7, -5, -127, -29, 30, 27, -60, -103, -25, 32, 14, -2, -35, -21, -59, 52, -16, 14, 7, 60, 92, 61, -39, 45, 17, 47, -34, 16, -8, -62, 47, -29, -35, -46, -29, 12, -18, -5, -16, 9, 7, 22, -2, -5, -4, 6, -25, -9, -4, 14, -127, -7, 3, -14, -11, 22, 19, 26, -2, -7, 21, -19, 3, -40, 26, 15, 24, -32, 11, 25, 20, -2, 59, -19, 17, -52, 6, 21, 10, -30, -12, 16, 48, -6, -26, 15, -17, -127, -10, -22, 62, -60, -30, 59, 29, 17, 26, -19, 43, -32, -98, 4, 14, -85, -9, 37, -72, 107, -15, -127, 8, -76, 64, -121, 126, -111, 74, -104, -68, 100, -65, -98, -107, -105, 77, -86, 117, 0, 37, -19, -15, -26, -42, -36, 12, -2, -49, 34, -13, -5, 41, 14, 22, 34, 7, -9, -48, 33, 40, -126, -3, 21, 14, 46, 1, -9, -17, 27, -15, 10, 10, 2, 102, 69, 1, 59, 64, 46, -38, 42, -68, 24, 54, 37, -113, -21, -9, 68, 99, -45, 41, -61, 45, -116, -127, 6, 9, -55, -55, -110, 22, -115, -78, 21, -10, -14, 0, -84, -18, -65, -38, -68, -23, 127, -31, -54, -33, -12, -33, -14, -49, -2, -24, -25, 114, 2, 26, 56, 1, -45, -34, -62, -21, -12, -36, 1, -14, -10, 21, 5, -36, 32, -3, 42, 10, 74, -41, -19, -127, -5, 4, -11, -55, -76, 25, -5, -12, 45, 2, -2, -13, -34, 23, -19, -1, -72, 16, 11, 55, -23, 44, 108, -126, -127, 37, 56, -16, -1, -3, 35, -36, -52, 2, 26, -21, -52, -30, -19, 15, 24, -5, 35, 72, -116, 87, -48, -5, 50, 26, 19, -16, 2, -69, -61, 52, 45, -63, -30, -22, -127, 9, 67, 3, 7, 12, -6, 24, -36, 22, -26, -32, 0, 32, 74, -59, 9, 20, -26, -61, 11, 7, -9 };

TRACCC_DEVICE_CONSTANT TRACCC_ALIGN(4) inline const std::int8_t W2[640] = {
    3, 2, 1, -4, 8, 12, 10, 12, -6, -9, 23, 24, -21, -127, 0, 5, -21, 18, -24, 4, -5, -8, -22, -1, -25, -12, 1, 36, -33, -9, -8, 6, -58, -67, -13, -5, -10, -12, 29, 19, -24, -16, -8, 28, -13, 28, 25, 25, -3, -65, -3, 4, -2, 8, 2, -15, 45, -9, 35, 35, -9, 24, 7, -9, -7, 11, 26, -19, 4, 24, -7, 16, -72, 10, -1, -26, -12, 0, 0, -17, 17, -25, -42, 3, 5, -4, -4, -19, 7, -7, -12, 10, -10, -17, 0, -58, 2, 8, 20, -5, -77, 18, -3, -8, 35, -56, -3, 51, 15, -14, 59, 0, 17, 5, 2, -38, 127, 5, 2, 0, 2, -12, 70, -5, -14, -5, -14, 15, -24, 39, 72, -47, 4, 56, -12, 52, 24, 32, -13, -61, -54, 9, 0, -99, 50, -97, -73, 10, 6, -15, -7, -48, 22, -32, -26, 32, -89, -47, 7, -16, 5, 15, -20, -10, -74, 64, -17, -4, 127, 28, 5, -28, 49, -6, 79, 2, -24, 26, 5, 45, -41, -3, 9, 9, 4, -43, -39, -17, -44, -24, -51, 47, -16, 6, 3, -1, 1, -6, -53, 1, -1, -1, -25, -12, -5, -2, 0, 2, -4, 1, -9, 73, -14, 14, -9, 0, -10, 5, 49, 5, 7, -1, -40, 2, -5, -2, -37, 47, -42, 1, 39, 9, 1, -23, -78, -43, 1, -32, -21, 35, 127, -3, -43, 42, 33, -79, 4, -21, 0, 1, 6, 10, 65, 4, 1, -3, 3, 26, -51, 6, 34, 6, 1, 11, 8, -10, -3, 77, 20, -49, 0, -2, -2, -14, 16, -16, 44, 46, 61, -4, -38, 46, -3, -18, -2, 6, 3, -5, -4, -51, 15, -1, -15, 37, -4, -19, 4, 35, 3, 27, -24, -92, 64, -88, -15, 50, 21, 26, -10, 1, 2, -127, -28, 11, -1, 6, 56, -62, -15, 8, -8, -33, 1, 7, 24, 8, 42, 13, -32, -21, -123, -68, -37, -7, 0, 12, 36, -44, 35, 21, 16, -8, 33, 4, -3, 12, -78, 0, -2, 9, -34, -18, -21, -8, -17, -55, 3, -29, -19, 18, 43, -4, -10, 35, 23, 2, 55, 73, 26, 3, -41, -19, 55, 0, 58, 6, -7, -59, 13, 16, -40, -10, 26, -37, 15, 37, 25, -13, 4, 5, -14, -8, 6, -6, -89, -108, 0, -5, 0, 22, 9, 25, -16, -2, 14, -6, 40, 4, 9, -10, -12, -21, -13, -8, 3, 16, 5, -6, 29, -24, -60, -11, 5, -1, -24, -18, -18, -30, -4, 8, 127, -37, -18, 7, 18, 12, -12, 12, -48, 7, 15, 7, -7, -11, 34, 9, -13, 4, 14, 0, -3, 0, 21, -2, 8, -3, 4, 3, -3, 21, 4, 4, 0, -6, 0, 0, -7, 0, 3, -11, -6, 3, 8, 1, 5, -2, -1, -14, -15, -4, -6, 3, 1, 27, 61, 6, -13, 4, -2, 125, 9, 88, -1, 6, 68, 12, -27, 1, 11, -127, -20, 10, -21, 4, -12, 2, -1, 6, 21, -3, -1, 8, -41, -11, 61, -22, 22, -7, -29, 5, -3, -5, 56, 28, 60, 39, 0, -27, 8, 56, 7, 16, -108, -59, 52, 11, 59, -32, 39, -7, -91, -44, 19, 8, -26, 40, -119, 0, -13, -103, 29, -32, 3, -1, 11, -127, 24, 86, 12, 21, 12, -28, 39, -14, 50, -4, -7, -13, 20, 13, 0, 5, -10, 37, 34, -37, 75, 51, -9, 14, -58, -5, -51, 3, 32, 38, 127, 34, 6, -6, 0, -12, -46, 14, -41, -12, -22, -2, 1, -3, 11, -16, 113, -24, 44, 1, 70, 22, 19, 28, 12, 62, 9, 9, 7, -40, -36, -22, -18, 4, -19, 19, -26, -74, -41, -18, 63, 14, -50, 31, -50, -5, 16, 35, -18, -21, 59, 0, -23, 19 };

TRACCC_DEVICE_CONSTANT TRACCC_ALIGN(4) inline const float B0[32] = {
    5.744483e-01f, -6.496757e-01f, 2.497431e-01f, 5.089847e-01f, -2.996427e-01f, 5.171334e-01f, -1.627837e+00f, -3.365786e-01f, 1.034504e+00f, -1.511644e-01f, -9.753507e-01f, 2.568704e-01f, -5.360498e-01f, -3.225242e-01f, 3.390046e-01f, -7.408452e-01f, -2.396314e-01f, -5.204071e-02f, -5.709143e-01f, 4.802530e-02f, -8.912011e-01f, -7.082744e-01f, -6.070303e-01f, -7.142622e-01f, -8.260223e-01f, -2.029326e-01f, 1.450048e-01f, 7.043599e-01f, 3.476515e-01f, 8.373639e-02f, -8.610681e-01f, -5.611214e-01f };

TRACCC_DEVICE_CONSTANT TRACCC_ALIGN(4) inline const float B1[64] = {
    5.159903e-02f, 1.695217e-01f, -3.068075e-01f, 7.084989e-02f, 5.601708e-02f, -4.772305e-02f, 5.721468e-01f, 1.192538e-01f, -5.082701e-01f, -5.459169e-02f, -4.342075e-02f, -2.979403e-01f, -6.622916e-02f, 1.272741e-01f, -3.218169e-05f, -6.116630e-02f, 3.644140e-01f, -2.764643e-01f, -1.637623e-01f, 1.578793e-01f, 8.821414e-02f, 4.810713e-01f, -1.386111e-01f, 1.837543e-01f, -4.070656e-01f, 2.779908e-01f, 2.018221e-01f, 6.294218e-02f, -2.599478e-01f, -5.134096e-01f, 3.185653e-01f, -6.240988e-01f, 2.664532e-01f, 1.516714e-01f, -4.179525e-02f, 1.545996e-01f, -3.950146e-01f, -8.163506e-02f, 1.109573e-01f, 2.141077e-03f, -2.838697e-01f, -3.343538e-01f, -6.079378e-01f, -1.703847e-01f, 2.464949e-01f, -1.649246e-01f, -3.113979e-02f, -1.772543e-01f, -1.684402e-01f, 4.414091e-01f, 4.887088e-03f, -2.308886e-01f, -2.267688e-01f, 4.361014e-01f, 1.506602e-01f, 1.780255e-01f, -1.560551e-03f, 3.347358e-01f, -6.371292e-01f, 1.424185e-01f, -1.663858e-01f, 1.371663e-01f, 3.289831e-01f, 4.003178e-01f };

TRACCC_DEVICE_CONSTANT TRACCC_ALIGN(4) inline const float B2[10] = {
    3.568076e-01f, -7.627240e-03f, 6.783450e-02f, -2.020142e-01f, -2.859262e-01f, -1.463896e-02f, 1.781693e-02f, 6.844760e-02f, 2.741554e-01f, 7.530055e-03f };

}  // namespace traccc::fitting::detail

// ------------------------------------------------------------
// ②  提供與舊版 *完全相同* 的介面
// ------------------------------------------------------------

namespace traccc::fitting {
template <typename algebra_t, std::size_t D>
struct kalman_int8_gru_gain_predictor_weights {
    // 以 constexpr 參考的方式把外部陣列「掛」進來
    static constexpr const auto& W0 = detail::W0;
    static constexpr const auto& W1 = detail::W1;
    static constexpr const auto& W2 = detail::W2;
    static constexpr const auto& B0 = detail::B0;
    static constexpr const auto& B1 = detail::B1;
    static constexpr const auto& B2 = detail::B2;

    // Quantisation parameters for activations
    static constexpr float QuantInScale   = 8.438598e-02f;
    static constexpr int   QuantInZeroPoint = 118;
    static constexpr float FC1Scale       = 4.189834e-02f;
    static constexpr int   FC1ZeroPoint   = 0;
    static constexpr float FC2Scale       = 1.956078e-02f;
    static constexpr int   FC2ZeroPoint   = 0;
    static constexpr float FC3Scale       = 5.465837e-02f;
    static constexpr int   FC3ZeroPoint   = 130;
};
}  // namespace traccc::fitting